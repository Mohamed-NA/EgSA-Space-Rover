import RPi.GPIO as GPIO
import time
from i2c_hmc5883l import HMC5883
from time import sleep

GPIO.setmode(GPIO.BCM)

def led():
    LED_PIN=17
    GPIO.setup(LED_PIN,GPIO.OUT)

    try:
        while True :
            GPIO.output(LED_PIN,GPIO.HIGH)
            time.sleep(1)
            GPIO.output(LED_PIN,GPIO.LOW)
            time.sleep(1)
    except KeyboardInterrupt:
        GPIO.cleanup()
# ========================================================
def toggle_led():
    LED_PIN=17

    GPIO.setmode(GPIO.BCM)

    GPIO.setup(LED_PIN,GPIO.OUT)
    GPIO.output(LED_PIN,GPIO.HIGH)

    state= int (input ("Enter 0 to power off the LED , Enter 1 to power on the LED:") )

    if state ==0:
        GPIO.output(LED_PIN,GPIO.LOW)
    elif state ==1 :
        GPIO.output(LED_PIN,GPIO.HIGH)
    else:
        print("Wrong state value :"+ str(state))
        GPIO.cleanup()
        exit 
    time.sleep(2)
    GPIO.cleanup()
# ========================================================
def IR():
    GPIO.setup(3,GPIO.IN)
    GPIO.setup(5,GPIO.OUT)

    while True :
        val = GPIO.input(3)
        print(val)
        if val == 1:
            GPIO.output(5,GPIO.LOW)
        else :
            GPIO.output(5,GPIO.HIGH)
# ========================================================
def ultra_sonic():
    TRIG = 23
    ECHO = 24

    print ("Distance Measurement in Progress")

    GPIO.setup(TRIG,GPIO.OUT)
    GPIO.setup(ECHO,GPIO.IN)
    try:
        while True:
            GPIO.output(TRIG,False)
            print ("Waiting For Sensor To Settle ")
            time.sleep(2)
            
            GPIO.output(TRIG,True)
            time.sleep(0.00001)
            GPIO.output(TRIG,False)
            
            while GPIO.input(ECHO)==0:
                pulse_start = time.time()
            
            while GPIO.input(ECHO)==1:
                pulse_end = time.time()
            
            pulse_duration = pulse_end - pulse_start
            
            distance = pulse_duration *17150
            
            distance = round (distance , 2)
            
            print ("Distance:", distance , "cm")
            
    except KeyboardInterrupt:
        print("Cleaning up!")
        GPIO.cleanup()
# ========================================================
def HMC5883L():
    i2c_HMC5883l = HMC5883(gauss=1.3)
    i2c_HMC5883l.set_declination(0, 0)

    while True:
        print(i2c_HMC5883l.get_heading())
        sleep(1)
# ========================================================
def MQ_135():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(4,GPIO.OUT)

    try:
        while True :
            if GPIO.input(4):
                print ("I'm reading TRUE on GPIO 4")
            else:
                print ("I'm reading TRUE on GPIO 4")
                
            sleep(1)
    finally:
        
        print ("Cleaning up..")
        GPIO.cleanup()
# ========================================================
